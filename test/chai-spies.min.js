!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):function(){if(!t.chai)throw new Error("Chai cannot be found in current scope.");t.chai.use(e())}()}(this,function(){"use strict";return function(t,e){var o=t.Assertion,n=(e.flag,e.inspect,"undefined"==typeof Symbol?"__state":Symbol("state")),s=0,i=new h,a=function(){};function h(){this[n]={}}function l(t,o,n){if(t.calls.length<o)return!1;var s=t.calls[o].slice(),i=0;return n.forEach(function(t){for(var o=0;o<s.length;o++)if(e.eql(s[o],t)){i++,s.splice(o,1);break}}),i===n.length}function r(t,e){for(var o=0,n=t.calls,s=0;s<n.length;s++)l(t,s,e)&&o++;return o}function c(t){return 1===t?"first":2===t?"second":3===t?"third":t+"th"}function p(t){return function(e){void 0!==this._obj.__spy?(new o(this._obj).to.be.spy,this.assert(this._obj.__spy.calls.length>e,"expected "+this._obj+" to have been called more than #{exp} times but got #{act}","expected "+this._obj+" to have been called at most #{exp} times but got #{act}",e,this._obj.__spy.calls.length)):t.apply(this,arguments)}}function d(t){return function(e){void 0!==this._obj.__spy?(new o(this._obj).to.be.spy,this.assert(this._obj.__spy.calls.length<e,"expected "+this._obj+" to have been called fewer than #{exp} times but got #{act}","expected "+this._obj+" to have been called at least #{exp} times but got #{act}",e,this._obj.__spy.calls.length)):t.apply(this,arguments)}}function b(t){return function(e){void 0!==this._obj.__spy?(new o(this._obj).to.be.spy,this.assert(this._obj.__spy.calls.length>=e,"expected "+this._obj+" to have been called at least #{exp} times but got #{act}","expected "+this._obj+" to have been called fewer than #{exp} times but got #{act}",e,this._obj.__spy.calls.length)):t.apply(this,arguments)}}function u(t){return function(e){void 0!==this._obj.__spy?(new o(this._obj).to.be.spy,this.assert(this._obj.__spy.calls.length<=e,"expected "+this._obj+" to have been called at most #{exp} times but got #{act}","expected "+this._obj+" to have been called more than #{exp} times but got #{act}",e,this._obj.__spy.calls.length)):t.apply(this,arguments)}}h.prototype.on=function(e,o,i){if(Array.isArray(o))return o.map(function(t){return this.on(e,t,i)},this);var a="function"==typeof e[o];if(o in e&&!a)throw new Error(['Unable to spy property "',o,'". Only methods and non-existing properties can be spied.'].join(""));if(a&&e[o].__spy)throw new Error('"'+o+'" is already a spy');var h=t.spy("object."+o,i||e[o]),l=++s;return this[n][l]=h,h.__spy.tracked={object:e,methodName:o,originalMethod:e[o],isOwnMethod:e.hasOwnProperty(o)},e[o]=h,h},h.prototype.restore=function(t,e){var o=Boolean(t&&e),s=this;return e&&!Array.isArray(e)&&(e=[e]),Object.keys(this[n]).some(function(i){var a=s[n][i],h=a.__spy.tracked,l=!t||t===h.object,r=!e||-1!==e.indexOf(h.methodName);return delete s[n][i],!(!l&&!r)&&(s.restoreTrackedObject(a),!!o||void 0)}),this},h.prototype.restoreTrackedObject=function(t){var e=t.__spy.tracked;if(!e)throw new Error("It is not possible to restore a non-tracked spy.");e.isOwnMethod?e.object[e.methodName]=e.originalMethod:delete e.object[e.methodName],t.__spy.tracked=null},t.spy=function(t,e){"function"==typeof t&&(e=t,t=void 0);var o=function(t,e){switch(t){case 0:return function(){return e.apply(this,arguments)};case 1:return function(t){return e.apply(this,arguments)};case 2:return function(t,o){return e.apply(this,arguments)};case 3:return function(t,o,n){return e.apply(this,arguments)};case 4:return function(t,o,n,s){return e.apply(this,arguments)};case 5:return function(t,o,n,s,i){return e.apply(this,arguments)};case 6:return function(t,o,n,s,i,a){return e.apply(this,arguments)};case 7:return function(t,o,n,s,i,a,h){return e.apply(this,arguments)};case 8:return function(t,o,n,s,i,a,h,l){return e.apply(this,arguments)};case 9:return function(t,o,n,s,i,a,h,l,r){return e.apply(this,arguments)};default:return function(t,o,n,s,i,a,h,l,r,c){return e.apply(this,arguments)}}}((e=e||a).length,function(){var t=Array.prototype.slice.call(arguments);return o.__spy.calls.push(t),o.__spy.called=!0,e.apply(this,t)});return o.prototype=e.prototype,o.toString=function(){var t=this.__spy,o=t.calls.length,n="{ Spy";return t.name&&(n+=" '"+t.name+"'"),o>0&&(n+=", "+o+" call"+(o>1?"s":"")),(n+=" }")+(e!==a?"\n"+e.toString():"")},o.__spy={calls:[],called:!1,name:t},o},t.spy.sandbox=function(){return new h},t.spy.on=function(){return i.on.apply(i,arguments)},t.spy.interface=function(e,o){var n={};return e&&"object"==typeof e&&(o=Object.keys(e),n=e,e="mock"),o.reduce(function(o,s){return o[s]=t.spy(e+"."+s,n[s]),o},{})},t.spy.restore=function(){return i.restore.apply(i,arguments)},t.spy.returns=function(e){return t.spy(function(){return e})},o.addProperty("spy",function(){return this.assert(void 0!==this._obj.__spy,"expected "+this._obj+" to be a spy","expected "+this._obj+" to not be a spy"),this}),o.addChainableMethod("called",function(t){new o(this._obj).to.be.spy;var e=this._obj.__spy;t?this.assert(e.calls.length===t,"expected "+this._obj+" to have been called #{exp} but got #{act}","expected "+this._obj+" to have not been called #{exp}",t,e.calls.length):this.assert(!0===e.called,"expected "+this._obj+" to have been called","expected "+this._obj+" to not have been called")},function(){new o(this._obj).to.be.spy}),o.addProperty("once",function(){new o(this._obj).to.be.spy,this.assert(1===this._obj.__spy.calls.length,"expected "+this._obj+" to have been called once but got #{act}","expected "+this._obj+" to not have been called once",1,this._obj.__spy.calls.length)}),o.addProperty("twice",function(){new o(this._obj).to.be.spy,this.assert(2===this._obj.__spy.calls.length,"expected "+this._obj+" to have been called twice but got #{act}","expected "+this._obj+" to not have been called twice",2,this._obj.__spy.calls.length)}),o.addProperty("first",function(){"undefined"!==this._obj.__spy&&e.flag(this,"spy nth call with",1)}),o.addProperty("second",function(){"undefined"!==this._obj.__spy&&e.flag(this,"spy nth call with",2)}),o.addProperty("third",function(){"undefined"!==this._obj.__spy&&e.flag(this,"spy nth call with",3)}),o.addProperty("on"),o.addChainableMethod("nth",function(t){"undefined"!==this._obj.__spy&&e.flag(this,"spy nth call with",t)}),o.addChainableMethod("with",function(){new o(this._obj).to.be.spy;var t=[].slice.call(arguments,0),n=this._obj.__spy,s=n.calls,i=e.flag(this,"spy always"),a=e.flag(this,"spy nth call with");if(i){var h=r(n,t);this.assert(h===s.length,"expected "+this._obj+" to have been always called with #{exp} but got "+h+" out of "+s.length,"expected "+this._obj+" to have not always been called with #{exp}",t)}else if(a){var p=c(a),d=s[a-1];new o(this._obj).to.be.have.been.called.min(a),this.assert(l(n,a-1,t),"expected "+this._obj+" to have been called at the "+p+" time with #{exp} but got #{act}","expected "+this._obj+" to have not been called at the "+p+" time with #{exp}",t,d)}else h=r(n,t),this.assert(h>0,"expected "+this._obj+" to have been called with #{exp}","expected "+this._obj+" to have not been called with #{exp} but got "+h+" times",t)},function(){"undefined"!==this._obj.__spy&&e.flag(this,"spy with",!0)}),o.addProperty("always",function(){"undefined"!==this._obj.__spy&&e.flag(this,"spy always",!0)}),o.addMethod("exactly",function(){new o(this._obj).to.be.spy;var t,n=e.flag(this,"spy always"),s=e.flag(this,"spy with"),i=[].slice.call(arguments,0),a=this._obj.__spy.calls,h=e.flag(this,"spy nth call with");if(n&&s)t=0,a.forEach(function(o){o.length===i.length&&e.eql(o,i)&&t++}),this.assert(t===a.length,"expected "+this._obj+" to have been always called with exactly #{exp} but got "+t+" out of "+a.length,"expected "+this._obj+" to have not always been called with exactly #{exp}",i);else if(s&&h){var l=c(h),r=a[h-1];new o(this._obj).to.be.have.been.called.min(h),this.assert(e.eql(r,i),"expected "+this._obj+" to have been called at the "+l+" time with exactly #{exp} but got #{act}","expected "+this._obj+" to have not been called at the "+l+" time with exactly #{exp}",i,r)}else s?(t=0,a.forEach(function(o){o.length===i.length&&e.eql(o,i)&&t++}),this.assert(t>0,"expected "+this._obj+" to have been called with exactly #{exp}","expected "+this._obj+" to not have been called with exactly #{exp} but got "+t+" times",i)):this.assert(this._obj.__spy.calls.length===i[0],"expected "+this._obj+" to have been called #{exp} times but got #{act}","expected "+this._obj+" to not have been called #{exp} times",i[0],this._obj.__spy.calls.length)}),o.overwriteMethod("above",p),o.overwriteMethod("gt",p),o.overwriteMethod("below",d),o.overwriteMethod("lt",d),o.overwriteMethod("min",b),o.overwriteMethod("least",b),o.overwriteMethod("max",u),o.overwriteMethod("most",u)}});
